{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/show-cart.js","store/shopping-item.js","store/index.js","store/shopping-item-actions.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","index.js"],"names":["module","exports","showCartSlice","createSlice","name","initialState","isShowCart","notification","reducers","toggleShowCart","state","showNotification","action","status","payload","title","message","showCartActions","actions","cartSlice","items","totalQuantity","changed","replaceItem","addItem","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItem","filter","cartActions","store","configureStore","reducer","cartVisible","cart","fetchCartData","async","cartData","response","fetch","ok","Error","json","fetchData","dispatch","error","sendCartData","method","body","JSON","stringify","sendRequest","Card","props","_jsx","className","concat","classes","card","children","CartItem","useDispatch","total","_jsxs","toFixed","itemprice","details","onClick","removeItemHandler","addItemHandler","Cart","useSelector","cartItems","length","map","CartButton","toggleCartHangler","button","badge","MainHeader","header","Layout","Fragment","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","success","cssClasses","isInitial","App","useEffect","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.02012a54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1DBdo\",\"details\":\"CartItem_details__3un3X\",\"quantity\":\"CartItem_quantity__QwUwh\",\"price\":\"CartItem_price__2WLED\",\"itemprice\":\"CartItem_itemprice__1AIHd\",\"actions\":\"CartItem_actions__2fo1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__Ftp37\",\"price\":\"ProductItem_price__23IMs\",\"actions\":\"ProductItem_actions__1uff2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2r0Fo\",\"error\":\"Notification_error__1SK7q\",\"success\":\"Notification_success__E-pfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3jdqc\",\"badge\":\"CartButton_badge__35Mnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1av73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__31hOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3x1yi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__Vk75L\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialShowCartState = { isShowCart: false, notification: null };\r\n\r\nconst showCartSlice = createSlice({\r\n  name: \"show-cart\",\r\n  initialState: initialShowCartState,\r\n  reducers: {\r\n    toggleShowCart(state) {\r\n      state.isShowCart = !state.isShowCart;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const showCartActions = showCartSlice.actions;\r\n\r\nexport default showCartSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartInitialState = { items: [], totalQuantity: 0, changed: false };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"item\",\r\n  initialState: cartInitialState,\r\n  reducers: {\r\n    replaceItem(state, action) {\r\n      state.items = action.payload.items;\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n    },\r\n    addItem(state, action) {\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n          existingItem.quantity++;\r\n          existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n        state.totalQuantity--;\r\n        state.changed = true;\r\n        const id = action.payload;\r\n        const existingItem = state.items.find((item) => item.id === id);\r\n        if (existingItem.quantity === 1) {\r\n            state.items = state.items.filter((item) => item.id !== id);\r\n        } else {\r\n            existingItem.quantity--;\r\n            existingItem.totalPrice = existingItem.totalPrice - existingItem.price;    \r\n        }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport showCartSlice from \"./show-cart\";\r\nimport cartSlice from \"./shopping-item\";\r\n\r\nconst store = configureStore({\r\n    reducer: { cartVisible: showCartSlice.reducer, cart: cartSlice.reducer }\r\n});\r\n\r\nexport default store;","import { showCartActions } from './show-cart';\r\nimport { cartActions } from './shopping-item';\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch ('https://react-http-2bc42-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Fetching data failed...');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceItem({\r\n              items: cartData.items || [],\r\n              totalQuantity: cartData.totalQuantity\r\n            }));\r\n        } catch (error) {\r\n            dispatch(showCartActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Sending cart data failed!'\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(showCartActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!'\r\n      }));\r\n      const sendRequest = async () => {\r\n        const response = await fetch(\r\n          \"https://react-http-2bc42-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n              items: cart.items,\r\n              totalQuantity: cart.totalQuantity\r\n            }),\r\n          }\r\n        );\r\n    \r\n        if (!response.ok) {\r\n          throw new Error('');\r\n        }\r\n    \r\n        dispatch(showCartActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success',\r\n          message: 'Sent cart data successfully!'\r\n        }));\r\n      }\r\n  \r\n      try {\r\n        await sendRequest();\r\n      } catch (error) {\r\n        dispatch(showCartActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!'\r\n        }));\r\n      }\r\n    }\r\n  }","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/shopping-item';\n\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n\n  const dispatch = useDispatch();\n\n  const { id, title, quantity, total, price } = props.item;\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItem({\n      id,\n      price,\n      title\n    }));\n  }\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItem(id));\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const items = useSelector((state) => state.cart.items);\n\n  const cartItems =\n    items.length > 0 &&\n    items.map((item) => (\n      <CartItem\n        key={item.id}\n        item={{\n          id: item.id,\n          title: item.name,\n          quantity: item.quantity,\n          total: item.totalPrice,\n          price: item.price,\n        }}\n      />\n    ));\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>{cartItems}</ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { showCartActions } from '../../store/show-cart';\n\nconst CartButton = (props) => {\n\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const dispatch = useDispatch();\n\n  const toggleCartHangler = () => {\n    dispatch(showCartActions.toggleShowCart());\n  }\n\n  return (\n    <button onClick={toggleCartHangler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/shopping-item';\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { id, title, price, description } = props;\n\n  const dispatch = useDispatch();\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItem({\n      id,\n      price,\n      title\n    }));\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [{\n  id: 'p1',\n  price: 6,\n  title: 'First book',\n  description: 'Description of first book'\n},\n{\n  id: 'p2',\n  price: 5,\n  title: 'Second book',\n  description: 'Description of second book'\n}]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (<ProductItem\n          key={product.id}\n          id={product.id}\n          title={product.title}\n          price={product.price}\n          description={product.description}\n        />))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { showCartActions } from \"./store/show-cart\";\nimport { sendCartData, fetchCartData } from \"./store/shopping-item-actions\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\n\nfunction App() {\n  const isShowCart = useSelector((state) => state.cartVisible.isShowCart);\n  const notification = useSelector((state) => state.cartVisible.notification);\n  const cart = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  },[dispatch]);\n\n  useEffect(() => {\n    // const sendCartData = async () => {\n    //   dispatch(showCartActions.showNotification({\n    //     status: 'pending',\n    //     title: 'Sending...',\n    //     message: 'Sending cart data!'\n    //   }));\n    //   const response = await fetch(\n    //     \"https://react-http-2bc42-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n    //     {\n    //       method: \"PUT\",\n    //       body: JSON.stringify(cart),\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('');\n    //   }\n\n    //   dispatch(showCartActions.showNotification({\n    //     status: 'success',\n    //     title: 'Success',\n    //     message: 'Sent cart data successfully!'\n    //   }));\n    // };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    // sendCartData().catch((error) => {\n    //   dispatch(showCartActions.showNotification({\n    //     status: 'error',\n    //     title: 'Error!',\n    //     message: 'Sending cart data failed!'\n    //   }));\n    // });\n    if (cart.changed) dispatch(sendCartData(cart));\n\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {isShowCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}